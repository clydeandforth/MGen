# James Doonan
########################
# subsample orthologs:

#!/bin/sh

for i in {1..100}
do
  	head -1 JD_kinfin_Oct_revised.kinfin_results/TAXON/TAXON.cluster_summary.txt > "output${i}.txt"
# sort -R will randomly sort the text file 
        sort -R JD_kinfin_Oct_revised.kinfin_results/TAXON/TAXON.cluster_summary.txt | head -312  >> "output${i}.txt"
        mv "output${i}.txt" Subsampled_orthologues
done
########################

#!/bin/bash
# use blastp to align study organisms to the VFDB

module load DIAMOND/0.9.22

### loop 1

FILES=VFDB/sane_files/*
mkdir -p VFDB/sane_files/diamond_results
for f in $FILES

do
  	diamond blastp -d VFDB_db -q "VFDB/sane_files/$(basename $f)"  -o "VFDB/sane_files/$(basename $f).txt" --query-cover 97  --outfmt 6 qseqid sseqid pident length$

done
mv VFDB/sane_files/*.txt VFDB/sane_files/diamond_results

FILES=/scratch/b.bss81c/VFDB/sane_files/diamond_results/*
for f in $FILES

do
  	awk -v x=50 '$3 >= x'  "/scratch/b.bss81c/VFDB/sane_files/diamond_results/$(basename $f)" | awk '{print $1}' > "/scratch/b.bss81c/VFDB/sane_files/diamond_results/$(basename $f).cutoffs.txt"
        mkdir -p /scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/

        mv "/scratch/b.bss81c/VFDB/sane_files/diamond_results/$(basename $f).cutoffs.txt"  /scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/
done
### loop 3

FILES=/scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/*
#mkdir -p /scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/VFDB_fasta

for f in $FILES
do
  	awk 'END{print NR}' "/scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/$(basename $f)" >> file1.txt
        mkdir -p /scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/VFDB_fasta
        /home/b.bss81c/faSomeRecords /scratch/b.bss81c/VFDB/combined_fasta.faa "/scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/$(basename $f)"  "/scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/$(basename $f)_VFDB.fa"
       mv "/scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/$(basename $f)_VFDB.fa" /scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/VFDB_fasta
done


### loop 4

FILES=/scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/VFDB_fasta/*

for f in $FILES

do
awk '/>/ {count++} END{print count}'  "/scratch/b.bss81c/VFDB/sane_files/diamond_results/cutoffs/VFDB_fasta/$(basename $f)" >> file2.txt
done

### loop 5
# check fasta and identifers match

if diff file1.txt file2.txt > /dev/null
then
    echo "No difference"
else
    echo "Difference"
fi


########################
# generate networks from all subsampled ortholog clusters

#!/bin/sh

for i in {1..100}
do
  	~/kinfin/scripts/generate_network.py -c ~/config_VFDB.txt  -m "output${i}.txt" -o "subsample_network${i}"
}
########################







